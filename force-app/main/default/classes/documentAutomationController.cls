/* 
* Class			    : documentAutomationController
* Developer			: Rahul Bejgam (ASE - Dextara)
* Created Date		: 08/03/2023
* Description		: This class creates the HTML content for Document Record Generation and passes it to the Queueable Class.
* Last Modified Date: 08/13/2023
*/
public with sharing class documentAutomationController {
    public static Safely safe = new Safely();
    private static Savepoint sp1;
    public class SafeClassException extends Exception {  }
   
    @InvocableMethod(label='Generate PDF Document' description='Generates PDF document without preview')  
    public static void autoGenerateDocumentRecord(List<recordParameters> docParam) {
        recordParameters inputIds = docParam[0];
        String recordId = inputIds.recordId;
        String templateId = inputIds.templateId;
        try {            
            Id insertedDocumentId;
            String documentContent = '';
            //String headerFooterContent = '';
            List<Id> roSectionIds = new List<Id> {};
            String attachmentName = (String) recordId + '.pdf';
            if(inputIds.documentName != null) {attachmentName = inputIds.documentName + '.pdf';}
            Document__c documentRecord = new Document__c();
            Document__c sectionContentRecord = new Document__c();
            List<Document__c> docArrtoUpdate = new List<Document__c> {};
            List<Document__c> documentToInsert = new List<Document__c> {};
            Map<String,String> headerFooterSectionMap = new Map<String,String> {};
            List<Document_Template_Section__c> allDataSections = DisplayPDFController.getTemplateSections(templateId, recordId, null);
                
            for(Document_Template_Section__c singleDataSection : allDataSections) {
                if(singleDataSection.Type__c == 'Header') {
                    headerFooterSectionMap.put('\"header\"',singleDataSection.Section_Content__c);
                    //headerFooterContent = '{ \"header\":'+ singleDataSection.Section_Content__c;
                }
                else if (singleDataSection.Type__c == 'Footer') {
                    headerFooterSectionMap.put('\"footer\"',singleDataSection.Section_Content__c);
                    //headerFooterContent = headerFooterContent + ', \"footer\":'+ singleDataSection.Section_Content__c + '}';
                }
                else if(singleDataSection.Type__c != 'Related Objects') {
                    documentContent = documentContent + singleDataSection.Section_Content__c;
                }
                else if(singleDataSection.Type__c == 'Related Objects') {
                    if(singleDataSection.New_Page__c == true){
                        documentContent = documentContent + '<table class="newPagetableMainClass">' + ROsectionAutomationController.getHeaderContent(singleDataSection.Id).replace('<table>','').replace('</table>','');
                    } else {
                        documentContent = documentContent + '<table class="tableMainClass">' + ROsectionAutomationController.getHeaderContent(singleDataSection.Id).replace('<table>','').replace('</table>','');
                    }                    
                    documentContent = documentContent + ROsectionAutomationController.getSectionDataAsHTML(recordId, singleDataSection.Id) + '</table>';
                }            
            }        
            
            sectionContentRecord.Document_Body__c = documentContent;
            sectionContentRecord.Document_Template__c = templateId;
            sectionContentRecord.Document_Content__c = String.valueof(headerFooterSectionMap).replace('\"header\"=','\"header\":').replace('\"footer\"=','\"footer\":');
            //sectionContentRecord.Document_Content__c = headerFooterContent;
            sectionContentRecord.Object_Id__c = recordId;            
            documentToInsert.add(sectionContentRecord);
            
            Savepoint sp = Database.setSavepoint();
            List<Database.SaveResult> sResult = safe.doInsert(documentToInsert);
            List<String> errorList = Safely.safeClassExceptionHandlerInsert(sResult);
            
            if(errorList.size()>0) {
                Database.rollback(sp);
                throw new SafeClassException(String.join( errorList, ', ' ));
            }
            
            for(Integer i=0;i<sResult.size();i++) {
                if (sResult.get(i).isSuccess()) {
                    if(sResult.get(i).getId() != null) {
                        insertedDocumentId = sResult.get(i).getId();
                    }
                }else if (!sResult.get(i).isSuccess()) {
                    Database.Error error = sResult.get(i).getErrors().get(0);
                    String failedDML = error.getMessage();
                }               
            }
            
            /* Document__c record Creation */
            documentRecord.Id = insertedDocumentId;
            documentRecord.Document_Body__c =  documentContent;
            docArrtoUpdate.add(documentRecord);
            
            Database.SaveResult[] urListsave = safe.doUpdate(docArrtoUpdate);
            List<String> errorList1 = Safely.safeClassExceptionHandlerInsert(urListsave);
            if(errorList1.size()>0) {
                Database.rollback(sp1);
                throw new SafeClassException(String.join( errorList1, ', ' ));
            }
            Savepoint sp1 = Database.setSavepoint();
            
            /* Queueing the process for a different Transaction */
            ID enqueuedJobID = System.enqueueJob(new sendEmailAutomation(insertedDocumentId, attachmentName, recordId));
        }        
        catch (Exception ex) {
            LogHandler.createLog((Id) null,'documentAutomationController.autoGenerateDocumentRecord()','Template Id- '+templateId+' '+ex.getLineNumber()+ex.getStackTraceString()+ex.getCause(),ex.getMessage(),'Exception');
        }
    } 
    
    
     public class recordParameters {
        @InvocableVariable(required=true)
        public String recordId;
        @InvocableVariable(required=true)
        public String templateId;
		@InvocableVariable
		public String documentName = null;         
    }
    
}